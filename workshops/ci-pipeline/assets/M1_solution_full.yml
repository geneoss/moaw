trigger:
  branches:
    include:
    - main
variables:
- name: buildConfiguration
  value: 'Release'
- name: solutionFile
  value: 'EStore.sln'
stages:
- stage: __default
  jobs:
  - job: Job
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: UseDotNet@2
      inputs:
        version: '5.0.x'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '$(solutionFile)'
        arguments: '--configuration $(buildConfiguration)'
# Or you can use the command line instead of DotNetCoreCLI@2
#- script: dotnet build  --configuration $(buildConfiguration) $(solutionFile) 
#  displayName: 'dotnet build $(solutionFile) $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
# Or you can use use the command line instead iof DotNetCirCLI@2
# - script: dotnet test $(solutionFile) --logger trx
# - task: PublishTestResults@2
#   condition: succeededOrFailed()
#   inputs:
#     testRunner: VSTest
#     testResultsFiles: '**/*.trx'

